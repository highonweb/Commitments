{
  "contractName": "DeleteCommitment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "AssignedContractee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EmergencyEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_contractor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_contractee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Contract",
          "type": "string"
        }
      ],
      "name": "EndCommitmentContracteeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_contractor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Contract",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "NewCommitment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_contractor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_contractee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferAmountEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "EndCommitmentContractee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "EndCommitmentContractor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "assigncontractee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assignedContracts",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "address",
          "name": "contractor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "contractee",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "Contract",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "contracteeStatus",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "contractorStatus",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_Contract",
          "type": "string"
        }
      ],
      "name": "postCommitment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "totalCommitments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "deleteByContractor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"AssignedContractee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EmergencyEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contractor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contractee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Contract\",\"type\":\"string\"}],\"name\":\"EndCommitmentContracteeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contractor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Contract\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"NewCommitment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contractor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contractee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAmountEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"EndCommitmentContractee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"EndCommitmentContractor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"assigncontractee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assignedContracts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Contract\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"contracteeStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"contractorStatus\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"deleteByContractor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_Contract\",\"type\":\"string\"}],\"name\":\"postCommitment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCommitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/mohan/Documents/HACKS/Commitments/contracts/DeleteCommitment.sol\":\"DeleteCommitment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/mohan/Documents/HACKS/Commitments/contracts/AddCommitment.sol\":{\"keccak256\":\"0xf58490b17819daa05079549d71785d5c2a89fed91cf7b8c030066dbae8dcdce6\",\"urls\":[\"bzz-raw://255052700cc3e7a413091b9e2fd862fbbdb606e7bfad30c07054876ff53cffc9\",\"dweb:/ipfs/Qmf3pH7ygxhHY4cCBKZxdaGwuNAxpyyVGA7572govUCRJM\"]},\"/home/mohan/Documents/HACKS/Commitments/contracts/AssignContractee.sol\":{\"keccak256\":\"0x2b3fb4e28dabd38e68f450d9d93d3b2de46bf02119a38af118fbdb3a8d6b95f4\",\"urls\":[\"bzz-raw://a076ddfb35e6b9b0499942b449129d6b74bb702d1b1b5ceca00d6bde97e38f20\",\"dweb:/ipfs/QmbdvLJDUYzQohQgTtoMzBKyVWcBM3nUjfqJFdWaGdfepS\"]},\"/home/mohan/Documents/HACKS/Commitments/contracts/Commitments.sol\":{\"keccak256\":\"0xda2a09397da2f56bafcf2c4d8bb7b4ebe378d1ad828cbee1b341024e59a89f2d\",\"urls\":[\"bzz-raw://f54a707e8b6f7dcb5ec3d922935f04c58beae4eab1c7dc9a2230f2b311275656\",\"dweb:/ipfs/QmapkR8g5Ab7wowWXcisppXTyhVoAQm4y36EuF6ehmv9NL\"]},\"/home/mohan/Documents/HACKS/Commitments/contracts/DeleteCommitment.sol\":{\"keccak256\":\"0x46c32eeaef3779b06c168ed3285d7ade1e2da71f04694d7a639dc65578c3b32b\",\"urls\":[\"bzz-raw://2ecf09d6993dcee3e27f190361084e4d948b385a76589dd7f323b0ba6058c57e\",\"dweb:/ipfs/Qmc98jP9wFjJeCZFFkkLdkWZHe4N94tgQaNQnYWQVBhbzt\"]},\"/home/mohan/Documents/HACKS/Commitments/contracts/EndCommitment.sol\":{\"keccak256\":\"0xbb99d1e8dc920aa64a9c98e66f271c93af96f0f0a3d7685e1411752addbfc152\",\"urls\":[\"bzz-raw://76a54f93506a746a99e54ed4e49d714b626ab6104eae92e21edd0e7bf992d7f6\",\"dweb:/ipfs/QmfZch7pGNZQ2oF8pVA4yQzutZspHBaBXxyvX1PLXfEGse\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060018190555061154e8061001b6000396000f3fe60806040526004361061007a5760003560e01c806378bb86d31161004e57806378bb86d3146102e15780637c7f51be1461030c578063dfc3aead14610347578063ed270e19146103825761007a565b806222d6b51461007f5780632132c32f146100eb57806349ce8997146101265780634d52f45b14610268575b600080fd5b34801561008b57600080fd5b506100946103bd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100d75780820151818401526020810190506100bc565b505050509050019250505060405180910390f35b3480156100f757600080fd5b506101246004803603602081101561010e57600080fd5b8101908080359060200190929190505050610446565b005b34801561013257600080fd5b5061015f6004803603602081101561014957600080fd5b81019080803590602001909291905050506106e4565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001868152602001851515151581526020018415151515815260200183151515158152602001828103825287818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6102df6004803603602081101561027e57600080fd5b810190808035906020019064010000000081111561029b57600080fd5b8201836020820111156102ad57600080fd5b803590602001918460018302840111640100000000831117156102cf57600080fd5b9091929391929390505050610832565b005b3480156102ed57600080fd5b506102f6610ae3565b6040518082815260200191505060405180910390f35b34801561031857600080fd5b506103456004803603602081101561032f57600080fd5b8101908080359060200190929190505050610ae9565b005b34801561035357600080fd5b506103806004803603602081101561036a57600080fd5b8101908080359060200190929190505050610b9f565b005b34801561038e57600080fd5b506103bb600480360360208110156103a557600080fd5b8101908080359060200190929190505050610ce9565b005b60606000809050606060008090505b60015481101561043d5760011515600082815481106103e757fe5b906000526020600020906005020160040160009054906101000a900460ff1615151415610430578082848151811061041b57fe5b60200260200101818152505082806001019350505b80806001019150506103cc565b50809250505090565b3373ffffffffffffffffffffffffffffffffffffffff166000828154811061046a57fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156104e75750600081815481106104c757fe5b906000526020600020906005020160040160009054906101000a900460ff165b6104f057600080fd5b6001600082815481106104ff57fe5b906000526020600020906005020160040160016101000a81548160ff0219169083151502179055507f7cb6aa3f663e7fe0889cfdf9334ced8a2c2ab8d44f1378aba757b0eea2ec80a06000828154811061055557fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000838154811061059457fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600084815481106105d357fe5b9060005260206000209060050201600201604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156106d15780601f106106a6576101008083540402835291602001916106d1565b820191906000526020600020905b8154815290600101906020018083116106b457829003601f168201915b505094505050505060405180910390a150565b600081815481106106f157fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e95780601f106107be576101008083540402835291602001916107e9565b820191906000526020600020905b8154815290600101906020018083116107cc57829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16908060040160029054906101000a900460ff16905087565b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200134815260200160001515815260200160001515815260200160001515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906109b49291906113a4565b506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff02191690831515021790555060c08201518160040160026101000a81548160ff02191690831515021790555050507fc12ac47b2aae360edaf50d9026e4787e4c242da7640c48df6b9ab7c3bc8d9901338383346000604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001848152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a16001600081548092919060010191905055505050565b60015481565b3373ffffffffffffffffffffffffffffffffffffffff1660008281548110610b0d57fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b8a575060008181548110610b6a57fe5b906000526020600020906005020160040160009054906101000a900460ff165b610b9357600080fd5b610b9c81610fb8565b50565b6000808281548110610bad57fe5b906000526020600020906005020190503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c1a57600080fd5b338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160040160006101000a81548160ff0219169083151502179055507fe39c4bce2818e9e16bfec179d17dbf100a313e75eb8867ccaae6e09d976c7e0b3383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b3373ffffffffffffffffffffffffffffffffffffffff1660008281548110610d0d57fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610d8a575060008181548110610d6a57fe5b906000526020600020906005020160040160009054906101000a900460ff165b8015610dbe575060008181548110610d9e57fe5b906000526020600020906005020160040160019054906101000a900460ff165b610dc757600080fd5b600160008281548110610dd657fe5b906000526020600020906005020160040160026101000a81548160ff0219169083151502179055506000610e6660008381548110610e1057fe5b90600052602060002090600502016003015460008481548110610e2f57fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661134c565b905080610e7257600080fd5b7f552e72bac16504b1c8b3f9a089007725e113c716d8d7069f6080c947750401a660008381548110610ea057fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008481548110610edf57fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008581548110610f1e57fe5b906000526020600020906005020160030154604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1610fb482610fb8565b5050565b60008181548110610fc557fe5b9060005260206000209060050201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006110329190611424565b60038201600090556004820160006101000a81549060ff02191690556004820160016101000a81549060ff02191690556004820160026101000a81549060ff02191690555050600180541461130a57600060018054038154811061109257fe5b9060005260206000209060050201600082815481106110ad57fe5b90600052602060002090600502016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600282018160020190805460018160011615610100020316600290046111b092919061146c565b50600382015481600301556004820160009054906101000a900460ff168160040160006101000a81548160ff0219169083151502179055506004820160019054906101000a900460ff168160040160016101000a81548160ff0219169083151502179055506004820160029054906101000a900460ff168160040160026101000a81548160ff021916908315150217905550905050600060018054038154811061125657fe5b9060005260206000209060050201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006112c39190611424565b60038201600090556004820160006101000a81549060ff02191690556004820160016101000a81549060ff02191690556004820160026101000a81549060ff021916905550505b7f98c60731006c4a01e78ae7527388a876bf6b1f86400a2780581eab1268ebc30d60405160405180910390a16001600081548092919060019003919050555050565b6000808290508073ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015611398573d6000803e3d6000fd5b50600191505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106113e557805160ff1916838001178555611413565b82800160010185558215611413579182015b828111156114125782518255916020019190600101906113f7565b5b50905061142091906114f3565b5090565b50805460018160011615610100020316600290046000825580601f1061144a5750611469565b601f01602090049060005260206000209081019061146891906114f3565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114a557805485556114e2565b828001600101855582156114e257600052602060002091601f016020900482015b828111156114e15782548255916001019190600101906114c6565b5b5090506114ef91906114f3565b5090565b61151591905b808211156115115760008160009055506001016114f9565b5090565b9056fea26469706673582212203a994737d54a80456833ddda0a5f00ac482b713b930470cc2cdb5733e9bbae2464736f6c63430006040033",
  "deployedBytecode": "0x60806040526004361061007a5760003560e01c806378bb86d31161004e57806378bb86d3146102e15780637c7f51be1461030c578063dfc3aead14610347578063ed270e19146103825761007a565b806222d6b51461007f5780632132c32f146100eb57806349ce8997146101265780634d52f45b14610268575b600080fd5b34801561008b57600080fd5b506100946103bd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100d75780820151818401526020810190506100bc565b505050509050019250505060405180910390f35b3480156100f757600080fd5b506101246004803603602081101561010e57600080fd5b8101908080359060200190929190505050610446565b005b34801561013257600080fd5b5061015f6004803603602081101561014957600080fd5b81019080803590602001909291905050506106e4565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001868152602001851515151581526020018415151515815260200183151515158152602001828103825287818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6102df6004803603602081101561027e57600080fd5b810190808035906020019064010000000081111561029b57600080fd5b8201836020820111156102ad57600080fd5b803590602001918460018302840111640100000000831117156102cf57600080fd5b9091929391929390505050610832565b005b3480156102ed57600080fd5b506102f6610ae3565b6040518082815260200191505060405180910390f35b34801561031857600080fd5b506103456004803603602081101561032f57600080fd5b8101908080359060200190929190505050610ae9565b005b34801561035357600080fd5b506103806004803603602081101561036a57600080fd5b8101908080359060200190929190505050610b9f565b005b34801561038e57600080fd5b506103bb600480360360208110156103a557600080fd5b8101908080359060200190929190505050610ce9565b005b60606000809050606060008090505b60015481101561043d5760011515600082815481106103e757fe5b906000526020600020906005020160040160009054906101000a900460ff1615151415610430578082848151811061041b57fe5b60200260200101818152505082806001019350505b80806001019150506103cc565b50809250505090565b3373ffffffffffffffffffffffffffffffffffffffff166000828154811061046a57fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156104e75750600081815481106104c757fe5b906000526020600020906005020160040160009054906101000a900460ff165b6104f057600080fd5b6001600082815481106104ff57fe5b906000526020600020906005020160040160016101000a81548160ff0219169083151502179055507f7cb6aa3f663e7fe0889cfdf9334ced8a2c2ab8d44f1378aba757b0eea2ec80a06000828154811061055557fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000838154811061059457fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600084815481106105d357fe5b9060005260206000209060050201600201604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156106d15780601f106106a6576101008083540402835291602001916106d1565b820191906000526020600020905b8154815290600101906020018083116106b457829003601f168201915b505094505050505060405180910390a150565b600081815481106106f157fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e95780601f106107be576101008083540402835291602001916107e9565b820191906000526020600020905b8154815290600101906020018083116107cc57829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16908060040160029054906101000a900460ff16905087565b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200134815260200160001515815260200160001515815260200160001515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906109b49291906113a4565b506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff02191690831515021790555060c08201518160040160026101000a81548160ff02191690831515021790555050507fc12ac47b2aae360edaf50d9026e4787e4c242da7640c48df6b9ab7c3bc8d9901338383346000604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001848152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a16001600081548092919060010191905055505050565b60015481565b3373ffffffffffffffffffffffffffffffffffffffff1660008281548110610b0d57fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b8a575060008181548110610b6a57fe5b906000526020600020906005020160040160009054906101000a900460ff165b610b9357600080fd5b610b9c81610fb8565b50565b6000808281548110610bad57fe5b906000526020600020906005020190503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c1a57600080fd5b338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160040160006101000a81548160ff0219169083151502179055507fe39c4bce2818e9e16bfec179d17dbf100a313e75eb8867ccaae6e09d976c7e0b3383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b3373ffffffffffffffffffffffffffffffffffffffff1660008281548110610d0d57fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610d8a575060008181548110610d6a57fe5b906000526020600020906005020160040160009054906101000a900460ff165b8015610dbe575060008181548110610d9e57fe5b906000526020600020906005020160040160019054906101000a900460ff165b610dc757600080fd5b600160008281548110610dd657fe5b906000526020600020906005020160040160026101000a81548160ff0219169083151502179055506000610e6660008381548110610e1057fe5b90600052602060002090600502016003015460008481548110610e2f57fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661134c565b905080610e7257600080fd5b7f552e72bac16504b1c8b3f9a089007725e113c716d8d7069f6080c947750401a660008381548110610ea057fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008481548110610edf57fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008581548110610f1e57fe5b906000526020600020906005020160030154604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1610fb482610fb8565b5050565b60008181548110610fc557fe5b9060005260206000209060050201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006110329190611424565b60038201600090556004820160006101000a81549060ff02191690556004820160016101000a81549060ff02191690556004820160026101000a81549060ff02191690555050600180541461130a57600060018054038154811061109257fe5b9060005260206000209060050201600082815481106110ad57fe5b90600052602060002090600502016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600282018160020190805460018160011615610100020316600290046111b092919061146c565b50600382015481600301556004820160009054906101000a900460ff168160040160006101000a81548160ff0219169083151502179055506004820160019054906101000a900460ff168160040160016101000a81548160ff0219169083151502179055506004820160029054906101000a900460ff168160040160026101000a81548160ff021916908315150217905550905050600060018054038154811061125657fe5b9060005260206000209060050201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006112c39190611424565b60038201600090556004820160006101000a81549060ff02191690556004820160016101000a81549060ff02191690556004820160026101000a81549060ff021916905550505b7f98c60731006c4a01e78ae7527388a876bf6b1f86400a2780581eab1268ebc30d60405160405180910390a16001600081548092919060019003919050555050565b6000808290508073ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015611398573d6000803e3d6000fd5b50600191505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106113e557805160ff1916838001178555611413565b82800160010185558215611413579182015b828111156114125782518255916020019190600101906113f7565b5b50905061142091906114f3565b5090565b50805460018160011615610100020316600290046000825580601f1061144a5750611469565b601f01602090049060005260206000209081019061146891906114f3565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114a557805485556114e2565b828001600101855582156114e257600052602060002091601f016020900482015b828111156114e15782548255916001019190600101906114c6565b5b5090506114ef91906114f3565b5090565b61151591905b808211156115115760008160009055506001016114f9565b5090565b9056fea26469706673582212203a994737d54a80456833ddda0a5f00ac482b713b930470cc2cdb5733e9bbae2464736f6c63430006040033",
  "sourceMap": "65:247:3:-:0;;;406:1:2;387:16;:20;;;;65:247:3;;;;;;",
  "deployedSourceMap": "65:247:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;530:395:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;530:395:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;530:395:1;;;;;;;;;;;;;;;;;1459:441:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1459:441:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1459:441:4;;;;;;;;;;;;;;;;;:::i;:::-;;280:31:2;;5:9:-1;2:2;;;27:1;24;17:12;2:2;280:31:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;280:31:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;280:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:533:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;238:533:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;238:533:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;238:533:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;238:533:0;;;;;;;;;;;;:::i;:::-;;318:31:2;;5:9:-1;2:2;;;27:1;24;17:12;2:2;318:31:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;115:195:3;;5:9:-1;2:2;;;27:1;24;17:12;2:2;115:195:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;115:195:3;;;;;;;;;;;;;;;;;:::i;:::-;;221:303:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;221:303:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;221:303:1;;;;;;;;;;;;;;;;;:::i;:::-;;716:737:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;716:737:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;716:737:4;;;;;;;;;;;;;;;;;:::i;:::-;;530:395:1;582:16;610:15;628:1;610:19;;639:36;690:9;702:1;690:13;;685:198;709:16;;705:1;:20;685:198;;;775:4;750:29;;:11;762:1;750:14;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;:29;;;746:127;;;830:1;799:19;819:7;799:28;;;;;;;;;;;;;:32;;;;;849:9;;;;;;;746:127;727:3;;;;;;;685:198;;;;899:19;892:26;;;;530:395;:::o;1459:441:4:-;1621:10;1590:41;;:11;1602:3;1590:16;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:41;;;:68;;;;;1635:11;1647:3;1635:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;1590:68;1569:99;;12:1:-1;9;2:12;1569:99:4;1714:4;1678:11;1690:3;1678:16;;;;;;;;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;1734:159;1776:11;1788:3;1776:16;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1817:11;1829:3;1817:16;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1858:11;1870:3;1858:16;;;;;;;;;;;;;;;;;;:25;;1734:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:441;:::o;280:31:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;238:533:0:-;336:11;366:291;;;;;;;;407:10;366:291;;;;;;455:1;366:291;;;;;;485:9;;366:291;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;366:291:0;;;;;;;;;;520:9;366:291;;;;555:5;366:291;;;;;;596:5;366:291;;;;;;637:5;366:291;;;;;336:331;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;336:331:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:54;696:10;708:9;;719;730:5;682:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;682:54:0;;;;;;;;;;;;;;;;;746:16;;:18;;;;;;;;;;;;;238:533;;:::o;318:31:2:-;;;;:::o;115:195:3:-;225:10;194:41;;:11;206:3;194:16;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:41;;;:68;;;;;239:11;251:3;239:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;194:68;173:99;;12:1:-1;9;2:12;173:99:3;282:21;299:3;282:16;:21::i;:::-;115:195;:::o;221:303:1:-;279:31;313:11;325:3;313:16;;;;;;;;;;;;;;;;;;279:50;;374:10;347:37;;:12;:23;;;;;;;;;;;;:37;;;;339:46;;12:1:-1;9;2:12;339:46:1;421:10;395:12;:23;;;:36;;;;;;;;;;;;;;;;;;463:4;441:12;:19;;;:26;;;;;;;;;;;;;;;;;;482:35;501:10;513:3;482:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;221:303;;:::o;716:737:4:-;875:10;844:41;;:11;856:3;844:16;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:41;;;:84;;;;;905:11;917:3;905:16;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;844:84;:137;;;;;948:11;960:3;948:16;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;844:137;823:168;;12:1:-1;9;2:12;823:168:4;1037:4;1001:11;1013:3;1001:16;;;;;;;;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;1095:19;1117:102;1145:11;1157:3;1145:16;;;;;;;;;;;;;;;;;;:23;;;1182:11;1194:3;1182:16;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1117:14;:102::i;:::-;1095:124;;1237:14;1229:23;;12:1:-1;9;2:12;1229:23:4;1267:148;1300:11;1312:3;1300:16;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1341:11;1353:3;1341:16;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1382:11;1394:3;1382:16;;;;;;;;;;;;;;;;;;:23;;;1267:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1425:21;1442:3;1425:16;:21::i;:::-;716:737;;:::o;396:314::-;461:11;473:3;461:16;;;;;;;;;;;;;;;;;;;454:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:1;491:16;;:21;487:158;;547:11;578:1;559:16;;:20;547:33;;;;;;;;;;;;;;;;;;528:11;540:3;528:16;;;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:11;632:1;613:16;;:20;601:33;;;;;;;;;;;;;;;;;;;594:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:158;659:16;;;;;;;;;;685;;:18;;;;;;;;;;;;;;396:314;:::o;777:238:0:-;873:4;893:25;937:11;893:57;;960:9;:18;;:27;979:7;960:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;960:27:0;1004:4;997:11;;;777:238;;;;:::o;65:247:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.7.0;\n\nimport \"./EndCommitment.sol\";\n\ncontract DeleteCommitment is EndCommitment {\n\n    function deleteByContractor(uint256 _id) public {\n        require(\n            commitments[_id].contractor == msg.sender && commitments[_id].status\n        );\n        deleteCommitment(_id);\n    }\n}\n",
  "sourcePath": "/home/mohan/Documents/HACKS/Commitments/contracts/DeleteCommitment.sol",
  "ast": {
    "absolutePath": "/home/mohan/Documents/HACKS/Commitments/contracts/DeleteCommitment.sol",
    "exportedSymbols": {
      "DeleteCommitment": [
        241
      ]
    },
    "id": 242,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 212,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/mohan/Documents/HACKS/Commitments/contracts/EndCommitment.sol",
        "file": "./EndCommitment.sol",
        "id": 213,
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 417,
        "src": "34:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 214,
              "name": "EndCommitment",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 416,
              "src": "94:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EndCommitment_$416",
                "typeString": "contract EndCommitment"
              }
            },
            "id": 215,
            "nodeType": "InheritanceSpecifier",
            "src": "94:13:3"
          }
        ],
        "contractDependencies": [
          80,
          179,
          210,
          416
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 241,
        "linearizedBaseContracts": [
          241,
          416,
          179,
          80,
          210
        ],
        "name": "DeleteCommitment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "163:147:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 221,
                                "name": "commitments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 199,
                                "src": "194:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Commitment_$196_storage_$dyn_storage",
                                  "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                                }
                              },
                              "id": 223,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 222,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "206:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "194:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Commitment_$196_storage",
                                "typeString": "struct Commitments.Commitment storage ref"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "contractor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 183,
                            "src": "194:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 225,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "225:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "225:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "194:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 228,
                              "name": "commitments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "239:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Commitment_$196_storage_$dyn_storage",
                                "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                              }
                            },
                            "id": 230,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 229,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "251:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "239:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Commitment_$196_storage",
                              "typeString": "struct Commitments.Commitment storage ref"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 191,
                          "src": "239:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "194:68:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "173:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "173:99:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "173:99:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "299:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 235,
                      "name": "deleteCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "282:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "282:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "282:21:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7c7f51be",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteByContractor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "143:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "142:13:3"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "163:0:3"
            },
            "scope": 241,
            "src": "115:195:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 242,
        "src": "65:247:3"
      }
    ],
    "src": "0:313:3"
  },
  "legacyAST": {
    "absolutePath": "/home/mohan/Documents/HACKS/Commitments/contracts/DeleteCommitment.sol",
    "exportedSymbols": {
      "DeleteCommitment": [
        241
      ]
    },
    "id": 242,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 212,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/mohan/Documents/HACKS/Commitments/contracts/EndCommitment.sol",
        "file": "./EndCommitment.sol",
        "id": 213,
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 417,
        "src": "34:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 214,
              "name": "EndCommitment",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 416,
              "src": "94:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EndCommitment_$416",
                "typeString": "contract EndCommitment"
              }
            },
            "id": 215,
            "nodeType": "InheritanceSpecifier",
            "src": "94:13:3"
          }
        ],
        "contractDependencies": [
          80,
          179,
          210,
          416
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 241,
        "linearizedBaseContracts": [
          241,
          416,
          179,
          80,
          210
        ],
        "name": "DeleteCommitment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "163:147:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 221,
                                "name": "commitments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 199,
                                "src": "194:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Commitment_$196_storage_$dyn_storage",
                                  "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                                }
                              },
                              "id": 223,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 222,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "206:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "194:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Commitment_$196_storage",
                                "typeString": "struct Commitments.Commitment storage ref"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "contractor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 183,
                            "src": "194:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 225,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "225:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "225:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "194:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 228,
                              "name": "commitments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "239:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Commitment_$196_storage_$dyn_storage",
                                "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                              }
                            },
                            "id": 230,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 229,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "251:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "239:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Commitment_$196_storage",
                              "typeString": "struct Commitments.Commitment storage ref"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 191,
                          "src": "239:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "194:68:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "173:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "173:99:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "173:99:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "299:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 235,
                      "name": "deleteCommitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "282:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "282:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "282:21:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7c7f51be",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteByContractor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "143:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "142:13:3"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "163:0:3"
            },
            "scope": 241,
            "src": "115:195:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 242,
        "src": "65:247:3"
      }
    ],
    "src": "0:313:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x98c60731006c4a01e78ae7527388a876bf6b1f86400a2780581eab1268ebc30d": {
          "anonymous": false,
          "inputs": [],
          "name": "EmergencyEvent",
          "type": "event"
        },
        "0xe39c4bce2818e9e16bfec179d17dbf100a313e75eb8867ccaae6e09d976c7e0b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "contractee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "AssignedContractee",
          "type": "event"
        },
        "0x7cb6aa3f663e7fe0889cfdf9334ced8a2c2ab8d44f1378aba757b0eea2ec80a0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_contractor",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_contractee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "Contract",
              "type": "string"
            }
          ],
          "name": "EndCommitmentContracteeEvent",
          "type": "event"
        },
        "0xc12ac47b2aae360edaf50d9026e4787e4c242da7640c48df6b9ab7c3bc8d9901": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_contractor",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "Contract",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "NewCommitment",
          "type": "event"
        },
        "0x552e72bac16504b1c8b3f9a089007725e113c716d8d7069f6080c947750401a6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_contractor",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_contractee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "name": "transferAmountEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xcE4C20dA04Ec8a775d08E3675ad00e213c0536d2",
      "transactionHash": "0x290ff81cb65b274c1d9dc24ed27bab4e5f698384abf46879258de924edae532b"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-10-26T18:24:36.233Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}